old = c("place", "date", "daily_cases"),
new = c("Country", "Date", "Incident_Cases"))
india_cases <- india_cases[
, Cases_fmt := fmt(Incident_Cases)
][
, text := paste0(Country, "<br>", Date, ": ", Cases_fmt,
" incident cases<br>")
][
, loess_cases := c(predict(loess(formula = Incident_Cases ~ Day, span = 0.15)))
][, .(Country, Date, Incident_Cases, Cases_fmt, text, loess_cases, Day)]
india_deaths <- india_data[total_deaths >= deaths_threshold][
order(date), Day := 1:.N][Day > 30][]
setnames(india_deaths,
old = c("place", "date", "daily_deaths"),
new = c("Country", "Date", "Incident_Deaths"))
india_deaths <- india_deaths[
, Deaths_fmt := fmt(Incident_Deaths)
][
, text := paste0(Country, "<br>", Date, ": ", Deaths_fmt,
" incident deaths<br>")
][
, loess_deaths := c(predict(loess(formula = Incident_Deaths ~ Day, span = 0.15)))
][, .(Country, Date, Incident_Deaths, Deaths_fmt, text, loess_deaths, Day)]
# combine ----------
cases_data  <- rbindlist(list(cases_data, india_cases), fill = TRUE)
deaths_data <- rbindlist(list(deaths_data, india_deaths), fill = TRUE)
cases.title <- paste("COVID-19 cases in India compared",
"to other countries")
deaths.title <- paste("COVID-19 deaths in India compared",
"to other countries")
cap <- paste0("\uA9 COV-IND-19 Study Group. Data through ",
trimws(format(max(data[, Date]), format = "%B")), " ",
trimws(format(max(data[, Date]), format = "%e")))
cap <- paste0("\uA9 COV-IND-19 Study Group. Data through ",
trimws(format(max(combined[, Date]), format = "%B")), " ",
trimws(format(max(combined[, Date]), format = "%e")))
axis.title.font <- list(size = 16)
tickfont        <- list(size = 16)
x.date.span = as.numeric(as.Date(today) - as.Date(min_date))
cases.xaxis <- list(title = paste0("Days since cumulative cases passed ",
cases.threshold),
titlefont = axis.title.font, showticklabels = TRUE,
tickangle = 0, showline = T, zeroline = F,
range = list(30, x.date.span + 14)
)
deaths.xaxis <- list(title = paste0("Days since cumulative deaths passed ",
deaths.threshold),
titlefont = axis.title.font, showticklabels = TRUE,
tickangle = 0, showline = T, zeroline = F,
range = list(30, x.date.span + 14)
)
cases.xaxis <- list(title = paste0("Days since cumulative cases passed ",
cases_threshold),
titlefont = axis.title.font, showticklabels = TRUE,
tickangle = 0, showline = T, zeroline = F,
range = list(30, x.date.span + 14)
)
deaths.xaxis <- list(title = paste0("Days since cumulative deaths passed ",
deaths_threshold),
titlefont = axis.title.font, showticklabels = TRUE,
tickangle = 0, showline = T, zeroline = F,
range = list(30, x.date.span + 14)
)
cases.yaxis <- list(title = "Incident number of reported cases", titlefont =
axis.title.font, tickfont = tickfont, zeroline = F,
showline = F)
deaths.yaxis <- list(title = "Incident number of reported deaths",
titlefont = axis.title.font, tickfont = tickfont,
zeroline = F, showline = F)
else_color  <- "#999999"
india_color <- "#138808"
colors <- c(viridis::plasma(length(unique(data$Country)) - 1, begin = 0, end = 0.8),
india_color)
colors <- c(viridis::plasma(length(unique(combined$Country)) - 1, begin = 0, end = 0.8),
india_color)
names(colors) <- c(setdiff(unique(combined$Country), "India"), "India")
case_plot <- plot_ly(cases_data, x = ~ Day, y = ~loess_cases, text = ~text,
color = ~Country, colors = colors,
legendgroup = ~Country, hoverinfo = "text",
mode = "markers+lines", hoverlabel = list(align = "left"),
showlegend = F, line = list(width = 3)
) %>%
add_trace(
data = cases_data[Country != "India"], type = "scatter",
mode = "lines", visible = "legendonly", line = list(width = 2)
) %>%
add_trace(data = cases_data[Country == "India"],
type = "scatter", mode = "lines", line = list(width = 3)
)  %>%
layout(xaxis = cases.xaxis, yaxis = cases.yaxis,
annotations = list(text = cases.title, xref = "paper", yref = "paper",
xanchor = "left", x = 0, y = 1.1, showarrow = F,
font = list(size = 22))
)
death_plot <- plot_ly(deaths_data, x = ~ Day, y = ~loess_deaths, text = ~text,
color = ~Country, colors = colors,legendgroup = ~Country,
hoverinfo = "text", mode = "markers+lines",
hoverlabel = list(align = "left"), showlegend = T
) %>%
add_trace(
data = deaths_data[Country != "India"], type = "scatter",
mode = "lines", visible = "legendonly", line = list(width = 2)
) %>%
add_trace(data = deaths_data[Country == "India"],
type = "scatter", mode = "lines", line = list(width = 3)
) %>%
layout(xaxis = deaths.xaxis, yaxis = deaths.yaxis,
annotations = list(text = deaths.title, xref = "paper", yref = "paper",
xanchor = "left", x = 0, y = 1.1, showarrow = F,
font = list(size = 22))
)
subplot(case_plot, death_plot, titleX = T, titleY = T, margin = .08,
nrows = 2, shareX = F) %>%
plotly::config(toImageButtonOptions = list(width = NULL, height = NULL))
runApp()
data_repo = "~/local/cov-ind-19-data/"
data_repo = "~/local/cov-ind-19-data"
today <- "2021-09-29"
#start.date = as.Date("2020-03-01")
data_caseplot =
vroom(paste0(data_repo, "/", today, "/covid19india_data.csv"), col_types = cols()) %>%
group_by(State) %>% #filter(Cases >= 50) %>%
arrange(Date) %>%
filter(Date >= as.Date('2020-05-01')) %>%
mutate(Day = seq(n()),
dailyCases = daily(Cases),
totalcases = max(Cases),
Datemax = max(Date))
# Compute daily counts from cumulative sums
daily = function(x) { c(x[1], diff(x)) }
#start.date = as.Date("2020-03-01")
data_caseplot =
vroom(paste0(data_repo, "/", today, "/covid19india_data.csv"), col_types = cols()) %>%
group_by(State) %>% #filter(Cases >= 50) %>%
arrange(Date) %>%
filter(Date >= as.Date('2020-05-01')) %>%
mutate(Day = seq(n()),
dailyCases = daily(Cases),
totalcases = max(Cases),
Datemax = max(Date))
data_caseplot
get_state_counts()
data_caseplot <- get_state_counts()[order(date),
`:=` (
day = 1:.N, daily,
Datemax = max(date)),
by = place][]
data_caseplot <- get_state_counts()[order(date),
`:=` (
day = 1:.N,
Datemax = max(date)),
by = place][]
data_caseplot
data_caseplot <- merge.data.table(
data_caseplot,
covid19india::pop[, !c("population")],
by = "place"
)
data_caseplot <- get_state_counts()[order(date),
`:=` (
day = 1:.N,
Datemax = max(date)),
by = place][]
data_caseplot <- merge.data.table(
data_caseplot,
covid19india::pop[, !c("population")][rowid(1)],
by = "place", all.x = TRUE
)
data_caseplot
covid19india::pop[, !c("population")][rowid(1)]
covid19india::pop[, !c("population")][rowid(1), by = place]
covid19india::pop[, !c("population")][, rowid(1), by = place]
covid19india::pop[, !c("population")][, .SD[1], by = place]
data_caseplot <- get_state_counts()[order(date),
`:=` (
day = 1:.N,
Datemax = max(date)),
by = place][]
data_caseplot <- merge.data.table(
data_caseplot,
covid19india::pop[, !c("population")][, .SD[1], by = place],
by = "place", all.x = TRUE
)
data_caseplot
count_data <- get_state_counts()[]
count_data <- get_state_counts()[]
data_caseplot <- count_data[order(date),
`:=` (
day = 1:.N,
Datemax = max(date)),
by = place][]
data_caseplot <- merge.data.table(
data_caseplot,
covid19india::pop[, !c("population")][, .SD[1], by = place],
by = "place", all.x = TRUE
)
count_data <- get_state_counts()[]
data_caseplot <- count_data[order(date),
`:=` (
day = 1:.N,
max_cases = max(total_cases),
max_deaths = max(total_deaths),
Datemax = max(date)),
by = place][]
data_caseplot <- merge.data.table(
data_caseplot,
covid19india::pop[, !c("population")][, .SD[1], by = place],
by = "place", all.x = TRUE
)
case_data <- data_caseplot[order(-total_cases)][1:20]
case_data
count_data <- get_state_counts()[order(date),
`:=` (
day = 1:.N,
max_cases = max(total_cases),
max_deaths = max(total_deaths),
Datemax = max(date)),
by = place][]
count_data <- merge.data.table(
count_data,
covid19india::pop[, !c("population")][, .SD[1], by = place],
by = "place", all.x = TRUE
)
case_data <- count_data[order(-total_cases)][, unique(place)][1:20]
case_data
# sort data sets from max to min max cases, plot the first 20
top_cases     <- count_data[order(-total_cases)][, unique(place)][1:20]
top_case_data <- count_data[place %in% top_cases]
top_deaths     <- count_data[order(-total_deaths)][, unique(place)][1:20]
top_death_data <- count_data[place %in% top_deaths]
top_deaths
# subtitle
subtitle <- paste0('\uA9 COV-IND-19 Study Group. Last updated ',
format(as.Date(today), format = '%b %e'), ', 2020', sep = '')
caption <- 'Source: CoWIN database'
# Compute daily counts from cumulative sums
daily = function(x) { c(x[1], diff(x)) }
count_data <- get_state_counts()[order(date),
`:=` (
day = 1:.N,
max_cases = max(total_cases),
max_deaths = max(total_deaths),
max_date = max(date)),
by = place][]
count_data <- merge.data.table(
count_data,
covid19india::pop[, !c("population")][, .SD[1], by = place],
by = "place", all.x = TRUE
)
# sort data sets from max to min max cases, plot the first 20
top_cases     <- count_data[order(-total_cases)][, unique(place)][1:20]
top_case_data <- count_data[place %in% top_cases]
top_deaths     <- count_data[order(-total_deaths)][, unique(place)][1:20]
top_death_data <- count_data[place %in% top_deaths]
# cumulative cases
case_plot <- ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = unique(top_case_data[, .(place, total_cases, abbrev, max_date)]),
aes(x = max_date, y = total_cases, group = place), size = 2) +
geom_text(data = unique(top_case_data[, .(place, total_cases, abbrev, max_date)]),
aes(x = max_date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(total_cases, ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n"
) +
scale_y_continuous(sec.axis = sec_axis(~ .)) +
theme_bw() +
theme(strip.text.x = element_text(size=12, face="bold", hjust = 0, color = '#36A30B'),
strip.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(angle = 20))
case_plot
case_plot
case_plot
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = unique(top_case_data[, .(place, total_cases, abbrev, max_date)]),
aes(x = max_date, y = total_cases, group = place), size = 2)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = unique(top_case_data[, .(place, total_cases, abbrev, max_date)][, .SD[1], by = place]),
aes(x = max_date, y = total_cases, group = place), size = 2)
top_case_data
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = unique(top_case_data[, .(place, total_cases, abbrev, max_date)][, .SD[date == max(date)], by = place]),
aes(x = max_date, y = total_cases, group = place), size = 2)
top_case_data[, .(place, total_cases, abbrev, max_date)][, .SD[date == max(date)], by = place]
top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place]
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = max_date, y = total_cases, group = place), size = 2)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(total_cases, ' total cases', sep = ' ')))
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(format(total_cases, big.mark = ","), ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n"
)
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(format(total_cases, big.mark = ","), ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n"
) +
scale_y_continuous(sec.axis = sec_axis(~ .))
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(format(total_cases, big.mark = ","), ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n"
) +
scale_y_continuous(labels = scales::comma, sec.axis = sec_axis(~ .))
ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(format(total_cases, big.mark = ","), ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n"
) +
scale_y_continuous(labels = scales::comma, sec.axis = sec_axis(~ .)) +
theme_bw() +
theme(strip.text.x = element_text(size=12, face="bold", hjust = 0, color = '#36A30B'),
strip.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(angle = 20))
# cumulative cases
case_plot <- ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(format(total_cases, big.mark = ","), ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n"
) +
scale_y_continuous(labels = scales::comma, sec.axis = sec_axis(~ .)) +
theme_bw() +
theme(strip.text.x = element_text(size=12, face="bold", hjust = 0, color = '#36A30B'),
strip.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(angle = 20))
case_plot
death_plot <- ggplot(data = top_death_data, aes(x = date, y = total_deaths, group = place)) +
geom_line(data = top_death_data, aes(x = date, y = total_deaths, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_death_data[, .(place, total_deaths, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_deaths, group = place), size = 2) +
geom_text(data = top_death_data[, .(place, total_deaths, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_death_data[, max(total_deaths)] - 500, group = place, label = paste(format(total_deaths, big.mark = ","), ' total deaths', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily deaths\n"
) +
scale_y_continuous(labels = scales::comma, sec.axis = sec_axis(~ .)) +
theme_bw() +
theme(strip.text.x = element_text(size=12, face="bold", hjust = 0, color = '#36A30B'),
strip.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(angle = 20))
death_plot
# cases
case_plot <- ggplot(data = top_case_data, aes(x = date, y = total_cases, group = place)) +
geom_line(data = top_case_data, aes(x = date, y = total_cases, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_cases, group = place), size = 2) +
geom_text(data = top_case_data[, .(place, total_cases, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_case_data[, max(total_cases)] - 500, group = place, label = paste(format(total_cases, big.mark = ","), ' total cases', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily cases\n",
title = '',
subtitle = subtitle,
caption = caption
) +
scale_y_continuous(labels = scales::comma, sec.axis = sec_axis(~ .)) +
theme_bw() +
theme(strip.text.x = element_text(size=12, face="bold", hjust = 0, color = '#36A30B'),
strip.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(angle = 20))
death_plot <- ggplot(data = top_death_data, aes(x = date, y = total_deaths, group = place)) +
geom_line(data = top_death_data, aes(x = date, y = total_deaths, group = place), color = "gray", alpha = 0.6) +
geom_line(color = "#36A30B", size = 1.5) +
facet_wrap(~place) +
geom_point(shape = 3, size = 0.5) +
geom_point(data = top_death_data[, .(place, total_deaths, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date, y = total_deaths, group = place), size = 2) +
geom_text(data = top_death_data[, .(place, total_deaths, abbrev, date)][, .SD[date == max(date)], by = place],
aes(x = date - 150, y = top_death_data[, max(total_deaths)] - 500, group = place, label = paste(format(total_deaths, big.mark = ","), ' total deaths', sep = ' '))) +
labs(
x = "\nDate",
y = "Cumulative number of daily deaths\n",
title = '',
subtitle = subtitle,
caption = caption
) +
scale_y_continuous(labels = scales::comma, sec.axis = sec_axis(~ .)) +
theme_bw() +
theme(strip.text.x = element_text(size=12, face="bold", hjust = 0, color = '#36A30B'),
strip.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(angle = 20))
runApp()
runApp()
###
f <- list.files("plot_functions")
for (i in seq_along(f)) {source(paste0("plot_functions/", f[i]))}
runApp()
top_case_death_facetplot()
runApp()
runApp()
runApp()
